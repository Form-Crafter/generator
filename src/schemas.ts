import { ComponentType, Schema } from '@types';

export const medicalQuestionnaireSchema: Schema = {
  version: '1.0',
  components: [
    {
      id: 'name4',
      formKey: 'name',
      type: ComponentType.InputField,
      label: 'Full Name',
      description: 'Enter your full name',
      disabled: false,
      value: '',
    },
    {
      id: 'email5',
      formKey: 'email',
      type: ComponentType.EmailField,
      label: 'Email',
      description: 'Enter your email address',
      disabled: false,
      value: '',
    },
    {
      id: 'phone5',
      formKey: 'phone',
      type: ComponentType.PhoneField,
      label: 'Phone Number',
      description: 'Enter your phone number',
      disabled: false,
      value: '',
    },
    {
      id: 'dob1',
      formKey: 'dob',
      type: ComponentType.InputField,
      label: 'Date of Birth',
      description: 'Enter your date of birth',
      disabled: false,
      value: '',
      customProperties: { type: 'date' },
    },
    {
      id: 'gender2',
      formKey: 'gender',
      type: ComponentType.RadioField,
      label: 'Gender',
      description: 'Select your gender',
      disabled: false,
      options: [
        { label: 'Male', value: 'male' },
        { label: 'Female', value: 'female' },
        { label: 'Other', value: 'other' },
      ],
      selectedOptionsValues: [],
    },
    {
      id: 'address2',
      formKey: 'address',
      type: ComponentType.TextareaField,
      label: 'Address',
      description: 'Enter your address',
      disabled: false,
      value: '',
    },
    {
      id: 'medicalHistory1',
      formKey: 'medicalHistory',
      type: ComponentType.TextareaField,
      label: 'Medical History',
      description: 'Describe your medical history',
      disabled: false,
      value: '',
    },
    {
      id: 'allergies1',
      formKey: 'allergies',
      type: ComponentType.CheckboxField,
      label: 'Allergies',
      description: 'Select any allergies you have',
      disabled: false,
      options: [
        { label: 'Peanuts', value: 'peanuts' },
        { label: 'Dairy', value: 'dairy' },
        { label: 'Gluten', value: 'gluten' },
        { label: 'Other', value: 'other' },
      ],
      selectedOptionsValues: [],
    },
    {
      id: 'medications1',
      formKey: 'medications',
      type: ComponentType.TextareaField,
      label: 'Current Medications',
      description: 'List any medications you are currently taking',
      disabled: false,
      value: '',
    },
    {
      id: 'insuranceProvider1',
      formKey: 'insuranceProvider',
      type: ComponentType.InputField,
      label: 'Insurance Provider',
      description: 'Enter your insurance provider',
      disabled: false,
      value: '',
    },
    {
      id: 'policyNumber1',
      formKey: 'policyNumber',
      type: ComponentType.InputField,
      label: 'Policy Number',
      description: 'Enter your insurance policy number',
      disabled: false,
      value: '',
    },
    {
      id: 'emergencyContact1',
      formKey: 'emergencyContact',
      type: ComponentType.InputField,
      label: 'Emergency Contact',
      description: 'Enter emergency contact name',
      disabled: false,
      value: '',
    },
    {
      id: 'emergencyContactPhone1',
      formKey: 'emergencyContactPhone',
      type: ComponentType.PhoneField,
      label: 'Emergency Contact Phone Number',
      description: 'Enter emergency contact phone number',
      disabled: false,
      value: '',
    },
    {
      id: 'submit5',
      formKey: 'submit',
      type: ComponentType.Button,
      text: 'Submit',
    },
  ],
};

export const employeeAnnualReviewSchema: Schema = {
  version: '1.0',
  components: [
    {
      id: 'employeeName1',
      formKey: 'employeeName',
      type: ComponentType.InputField,
      label: 'Employee Name',
      description: "Enter the employee's name",
      disabled: false,
      value: '',
    },
    {
      id: 'email6',
      formKey: 'email',
      type: ComponentType.EmailField,
      label: 'Email',
      description: "Enter the employee's email address",
      disabled: false,
      value: '',
    },
    {
      id: 'department1',
      formKey: 'department',
      type: ComponentType.InputField,
      label: 'Department',
      description: 'Enter the department',
      disabled: false,
      value: '',
    },
    {
      id: 'reviewPeriod1',
      formKey: 'reviewPeriod',
      type: ComponentType.InputField,
      label: 'Review Period',
      description: 'Enter the review period',
      disabled: false,
      value: '',
      customProperties: { type: 'date' },
    },
    {
      id: 'performanceRating1',
      formKey: 'performanceRating',
      type: ComponentType.RadioField,
      label: 'Performance Rating',
      description: "Rate the employee's performance",
      disabled: false,
      options: [
        { label: 'Excellent', value: 'excellent' },
        { label: 'Good', value: 'good' },
        { label: 'Average', value: 'average' },
        { label: 'Poor', value: 'poor' },
      ],
      selectedOptionsValues: [],
    },
    {
      id: 'goalsAchieved1',
      formKey: 'goalsAchieved',
      type: ComponentType.CheckboxField,
      label: 'Goals Achieved',
      description: 'Select the goals achieved by the employee',
      disabled: false,
      options: [
        { label: 'Met all deadlines', value: 'deadlines' },
        { label: 'Exceeded expectations', value: 'expectations' },
        { label: 'Improved skills', value: 'skills' },
      ],
      selectedOptionsValues: [],
    },
    {
      id: 'areasForImprovement1',
      formKey: 'areasForImprovement',
      type: ComponentType.TextareaField,
      label: 'Areas for Improvement',
      description: 'Describe areas where the employee can improve',
      disabled: false,
      value: '',
    },
    {
      id: 'trainingRequired1',
      formKey: 'trainingRequired',
      type: ComponentType.TextareaField,
      label: 'Training Required',
      description: 'List any training required for the employee',
      disabled: false,
      value: '',
    },
    {
      id: 'additionalComments1',
      formKey: 'additionalComments',
      type: ComponentType.TextareaField,
      label: 'Additional Comments',
      description: 'Provide any additional comments',
      disabled: false,
      value: '',
    },
    {
      id: 'reviewerName1',
      formKey: 'reviewerName',
      type: ComponentType.InputField,
      label: 'Reviewer Name',
      description: "Enter the reviewer's name",
      disabled: false,
      value: '',
    },
    {
      id: 'submit6',
      formKey: 'submit',
      type: ComponentType.Button,
      text: 'Submit Review',
    },
  ],
};
